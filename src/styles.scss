// Variables ================================================================
  //You can set variables to represent values and relative values
$sky: skyblue;
$sky2: $sky - 200;
$orange: orange;
$noMargin: 0vh;
$noPadding: 0vh;
$typingAnimationDuration: 2s;
$bannertext: 13vw;
$typedText: 15vw;
$letterSpacing:1px;

$firstToAnimate: 0.5*0s;
$secondToAnimate: 0.5*1s;
$thirdToAnimate: 0.5*2s;
$fourthToAnimate: 0.5*3s;








//Global Positioning Helpers ================================================================

body {
  margin: $noMargin;
  padding: $noPadding;
}

.barrier {
  margin: 5vh 0 5vh 0;
}

.container {
  width: 100vw;
  height: 100vh;

  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.container p, h2, h1, h3, h4, span {
  margin: 0px;
  padding: 0px;

}

// h2 {
//   animation-name: textcolor;
//   animation-duration: 10s;
//   animation-iteration-count: infinite;
// }


// .animatedText:hover{
//   animation: fadeAndScale .3s cubic-bezier(.54,1.59,.38,1.91);
//   transform-origin: center bottom;
// }

//Global Mixins Library =============================================================

  //Mixins are collections of CSS Rules that you package with an argument to reuse
  //they can be used in multiple ways by changing the value of arguments you pass them.
@mixin typedItem($animationDelay){
  font-size: $typedText;
  letter-spacing: $letterSpacing;
  animation: typing 0.6s;
  animation-delay: $animationDelay;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  overflow: hidden;
  // white-space: nowrap;
}






//Global Animations Library ================================================================
@keyframes bgblend {
  0%   {background-color: $sky2;}
  10%  {background-color: $sky2;}
  20% {background-color: $orange;}
  51% {background-color: $sky;}
  75% {background-color: $orange;}
  100% {background-color: $sky2;}

  // Sky2, orange, sky, orange sky2
}

// @keyframes textcolor {
//   0%   {color: red;}
//   20% {color: orange;}
//   40% {color: yellow;}
//   60% {color: green;}
//   80% {color: blue;}
//   97% {color: violet;}
//   100% {color: red;}
// }

@keyframes hideFromStart {
   from { opacity: 0; } to { opacity: 0 } 
}

@keyframes show {
  0% {opacity: 0;}
  1% {opacity: 1;}
  100% {opacity: 1}
}
 

.animatedText:active {
  animation: fadeAndScale2 .3s cubic-bezier(.54,1.59,.38,1.91);
  transform-origin: center bottom; 
  animation-iteration-count: 1;
}


@keyframes fadeAndScale {
  from {
    opacity: 0;
    transform: scale3d(.75, .75, 1)
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes fadeAndScale2 {
  from {
    opacity: 0;
    transform: scale3d(.75, .75, 1)
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}


@keyframes typing {
  0% {
    width: 0%;
    font-size: $typedText;
        color: red;
        text-shadow: 2px 2px px rgba(255,255,255, 0.4);
        white-space: nowrap;
  }

  100% {
    width: 100%;
    font-size: $typedText;
        color: red;
        text-shadow: 2px 2px 10px rgba(255,255,255, 0.4);
        white-space: nowrap;

  }

}


@keyframes popup {
  0% {}
  90% {transform: translateY(110vh)}
  100% {transform: translateY(100vh)}




}




// Page-Specific SCSS =============================================================



//landingPage --------------------------------------------------------------
.landingPage {
  margin: $noMargin;
  min-width: 100vw;
  min-height: 100vh;
  animation-name: bgblend;
  animation-duration: 30s;
  animation-iteration-count: infinite;

  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

    //In SASS/SCSS you can nest child elements so less css selector work needed
    p, h2, h1, h3, h4, span {
      // color: red;
    }

    .theBanner {
      background-color: rgba(0,0,0,0.7);
      padding: 4vh 4vw 4vh 4vw;
      font-size: $bannertext;
      color: red;
      text-shadow: 2px 2px 5px #fff;
      position: relative;
      top: -100vh;
      animation: popup 0.2s;
      animation-delay: 2s;
      animation-timing-function: ease forwards;
      animation-fill-mode: forwards;
    }

    

    .typed::first-letter {
      font-size: $typedText;
      color: red;
      text-shadow: 2px 2px 5px #fff;

    }




    .typefirst {
      @include typedItem(0s);
    }

    .typesecond {
      @include typedItem(0.5s);
    }

    .typethird {
      @include typedItem(1s);
    }

    .typefourth {
      @include typedItem(1.5s);
    }






}


